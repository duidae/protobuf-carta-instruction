// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: InstructionMsgBook.proto

#ifndef PROTOBUF_INCLUDED_InstructionMsgBook_2eproto
#define PROTOBUF_INCLUDED_InstructionMsgBook_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_InstructionMsgBook_2eproto 

namespace protobuf_InstructionMsgBook_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_InstructionMsgBook_2eproto
namespace tutorial {
class InstructionMsg;
class InstructionMsgDefaultTypeInternal;
extern InstructionMsgDefaultTypeInternal _InstructionMsg_default_instance_;
class InstructionMsgBook;
class InstructionMsgBookDefaultTypeInternal;
extern InstructionMsgBookDefaultTypeInternal _InstructionMsgBook_default_instance_;
}  // namespace tutorial
namespace google {
namespace protobuf {
template<> ::tutorial::InstructionMsg* Arena::CreateMaybeMessage<::tutorial::InstructionMsg>(Arena*);
template<> ::tutorial::InstructionMsgBook* Arena::CreateMaybeMessage<::tutorial::InstructionMsgBook>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace tutorial {

// ===================================================================

class InstructionMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tutorial.InstructionMsg) */ {
 public:
  InstructionMsg();
  virtual ~InstructionMsg();

  InstructionMsg(const InstructionMsg& from);

  inline InstructionMsg& operator=(const InstructionMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InstructionMsg(InstructionMsg&& from) noexcept
    : InstructionMsg() {
    *this = ::std::move(from);
  }

  inline InstructionMsg& operator=(InstructionMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InstructionMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InstructionMsg* internal_default_instance() {
    return reinterpret_cast<const InstructionMsg*>(
               &_InstructionMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(InstructionMsg* other);
  friend void swap(InstructionMsg& a, InstructionMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InstructionMsg* New() const final {
    return CreateMaybeMessage<InstructionMsg>(NULL);
  }

  InstructionMsg* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InstructionMsg>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InstructionMsg& from);
  void MergeFrom(const InstructionMsg& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InstructionMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string inst_name = 1;
  void clear_inst_name();
  static const int kInstNameFieldNumber = 1;
  const ::std::string& inst_name() const;
  void set_inst_name(const ::std::string& value);
  #if LANG_CXX11
  void set_inst_name(::std::string&& value);
  #endif
  void set_inst_name(const char* value);
  void set_inst_name(const char* value, size_t size);
  ::std::string* mutable_inst_name();
  ::std::string* release_inst_name();
  void set_allocated_inst_name(::std::string* inst_name);

  // @@protoc_insertion_point(class_scope:tutorial.InstructionMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr inst_name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_InstructionMsgBook_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InstructionMsgBook : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tutorial.InstructionMsgBook) */ {
 public:
  InstructionMsgBook();
  virtual ~InstructionMsgBook();

  InstructionMsgBook(const InstructionMsgBook& from);

  inline InstructionMsgBook& operator=(const InstructionMsgBook& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InstructionMsgBook(InstructionMsgBook&& from) noexcept
    : InstructionMsgBook() {
    *this = ::std::move(from);
  }

  inline InstructionMsgBook& operator=(InstructionMsgBook&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InstructionMsgBook& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InstructionMsgBook* internal_default_instance() {
    return reinterpret_cast<const InstructionMsgBook*>(
               &_InstructionMsgBook_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(InstructionMsgBook* other);
  friend void swap(InstructionMsgBook& a, InstructionMsgBook& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InstructionMsgBook* New() const final {
    return CreateMaybeMessage<InstructionMsgBook>(NULL);
  }

  InstructionMsgBook* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InstructionMsgBook>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InstructionMsgBook& from);
  void MergeFrom(const InstructionMsgBook& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InstructionMsgBook* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .tutorial.InstructionMsg inst = 1;
  int inst_size() const;
  void clear_inst();
  static const int kInstFieldNumber = 1;
  ::tutorial::InstructionMsg* mutable_inst(int index);
  ::google::protobuf::RepeatedPtrField< ::tutorial::InstructionMsg >*
      mutable_inst();
  const ::tutorial::InstructionMsg& inst(int index) const;
  ::tutorial::InstructionMsg* add_inst();
  const ::google::protobuf::RepeatedPtrField< ::tutorial::InstructionMsg >&
      inst() const;

  // @@protoc_insertion_point(class_scope:tutorial.InstructionMsgBook)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::tutorial::InstructionMsg > inst_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_InstructionMsgBook_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// InstructionMsg

// string inst_name = 1;
inline void InstructionMsg::clear_inst_name() {
  inst_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InstructionMsg::inst_name() const {
  // @@protoc_insertion_point(field_get:tutorial.InstructionMsg.inst_name)
  return inst_name_.GetNoArena();
}
inline void InstructionMsg::set_inst_name(const ::std::string& value) {
  
  inst_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tutorial.InstructionMsg.inst_name)
}
#if LANG_CXX11
inline void InstructionMsg::set_inst_name(::std::string&& value) {
  
  inst_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tutorial.InstructionMsg.inst_name)
}
#endif
inline void InstructionMsg::set_inst_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  inst_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tutorial.InstructionMsg.inst_name)
}
inline void InstructionMsg::set_inst_name(const char* value, size_t size) {
  
  inst_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tutorial.InstructionMsg.inst_name)
}
inline ::std::string* InstructionMsg::mutable_inst_name() {
  
  // @@protoc_insertion_point(field_mutable:tutorial.InstructionMsg.inst_name)
  return inst_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InstructionMsg::release_inst_name() {
  // @@protoc_insertion_point(field_release:tutorial.InstructionMsg.inst_name)
  
  return inst_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstructionMsg::set_allocated_inst_name(::std::string* inst_name) {
  if (inst_name != NULL) {
    
  } else {
    
  }
  inst_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), inst_name);
  // @@protoc_insertion_point(field_set_allocated:tutorial.InstructionMsg.inst_name)
}

// -------------------------------------------------------------------

// InstructionMsgBook

// repeated .tutorial.InstructionMsg inst = 1;
inline int InstructionMsgBook::inst_size() const {
  return inst_.size();
}
inline void InstructionMsgBook::clear_inst() {
  inst_.Clear();
}
inline ::tutorial::InstructionMsg* InstructionMsgBook::mutable_inst(int index) {
  // @@protoc_insertion_point(field_mutable:tutorial.InstructionMsgBook.inst)
  return inst_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::tutorial::InstructionMsg >*
InstructionMsgBook::mutable_inst() {
  // @@protoc_insertion_point(field_mutable_list:tutorial.InstructionMsgBook.inst)
  return &inst_;
}
inline const ::tutorial::InstructionMsg& InstructionMsgBook::inst(int index) const {
  // @@protoc_insertion_point(field_get:tutorial.InstructionMsgBook.inst)
  return inst_.Get(index);
}
inline ::tutorial::InstructionMsg* InstructionMsgBook::add_inst() {
  // @@protoc_insertion_point(field_add:tutorial.InstructionMsgBook.inst)
  return inst_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tutorial::InstructionMsg >&
InstructionMsgBook::inst() const {
  // @@protoc_insertion_point(field_list:tutorial.InstructionMsgBook.inst)
  return inst_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace tutorial

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_InstructionMsgBook_2eproto
